{"version":3,"sources":["common/jsTPS.js","components/Navbar.js","components/ListLink.js","components/LeftSidebar.js","components/TaskName.js","components/DueDate.js","components/Status.js","components/ToDoItem.js","components/Workspace.js","common/addItem_Transaction.js","common/deleteItem_Transaction.js","common/swapItem_Transaction.js","common/changeStatus_Transaction.js","common/changeDate_Transaction.js","common/editDescription_Transaction.js","components/DeleteModal.js","App.js","reportWebVitals.js","index.js"],"names":["jsTPS_Transaction","console","log","jsTPS","this","transactions","numTransactions","mostRecentTransaction","performingDo","performingUndo","length","getSize","transaction","i","splice","doTransaction","hasTransactionToRedo","hasTransactionToUndo","undoTransaction","Array","text","toString","Navbar","props","id","Component","ListLink","componentDidMount","toDoList","key","handleLoadList","e","loadToDoListCallback","handleOnBlur","name","currentTarget","innerText","changeListNameCallback","onBlur","contentEditable","className","onClick","style","highlighted","backgroundColor","color","LeftSidebar","handleAddNewList","addNewListCallback","class","toDoLists","map","TaskName","parentElement","slice","newName","state","oldName","editDescriptionCallback","handleOnFocus","innerHTML","setState","onFocus","item","description","DueDate","handleChangeDate","changeDateCallback","oldDate","value","currentDate","type","onChange","due_date","Status","handleSelectOnChange","changeStatusCallback","statusType","statusBool","status","selected","ToDoItem","toDoListItem","handleDeleteItem","deleteItemCallback","handleMoveItemUp","swapItemCallback","handleMoveItemDown","listItem","index","lastIndex","Workspace","handleAddNewItem","addNewItemCallback","handleUndoTransaction","undoTransactionCallback","handleRedoTransaction","redoTransactionCallback","handleOpenModal","openModal","canUndo","canRedo","display","flexDirection","flexWrap","listOpen","closeListCallback","toDoListItems","addItem_Transaction","initApp","app","addNewItem","deleteItem","nextListItemId","deleteItem_Transaction","indexOfId","deletedItem","insertItem","swapItem_Transaction","newIndex","swapItems","changeStatus_Transaction","changeStatus","changeDate_Transaction","newDate","changeDueDate","editDescription_Transaction","editDescription","DeleteModal","visible","closeModal","deleteListCallback","App","loadToDoList","currentList","tps","clearAllTransactions","nextLists","filter","testList","unshift","addNewList","newToDoListInList","makeNewToDoList","newToDoListsList","newToDoList","nextListId","afterToDoListsChangeComplete","items","makeNewToDoListItem","addNewItemTransaction","newTransaction","addTransaction","newItem","newId","newCurrentList","newListOfLists","deleteItemTransaction","removedItem","newCurrentListItems","swapItemTransaction","up","indexOne","indexTwo","newCurrentItems","temp","changeStatusTransaction","changeDateTransaction","date","editDescriptionTransaction","modalVisible","deleteList","closeList","listOfLists","changeListName","newListsList","todoItems","redoTransaction","toDoListsString","JSON","stringify","localStorage","setItem","handleKeyPress","ctrlKey","recentLists","getItem","testData","parse","highListId","highListItemId","j","useVerboseFeedback","onKeyDown","tabIndex","undefined","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.926f856d.chunk.js","sourcesContent":["'use strict'\n\n/**\n * jsTPS_Transaction\n * \n * This provides the basic structure for a transaction class. Note to use\n * jsTPS one should create objects that define these two methods, doTransaction\n * and undoTransaction, which will update the application state accordingly.\n * \n * @author THE McKilla Gorilla (accept no imposters)\n * @version 1.0\n */\nexport class jsTPS_Transaction {\n    /**\n     * This method is called by jTPS when a transaction is executed.\n     */\n    doTransaction() {\n        console.log(\"doTransaction - MISSING IMPLEMENTATION\");\n    }\n    \n    /**\n     * This method is called by jTPS when a transaction is undone.\n     */\n    undoTransaction() {\n        console.log(\"undoTransaction - MISSING IMPLEMENTATION\");\n    }\n}\n\n/**\n * jsTPS\n * \n * This class serves as the Transaction Processing System. Note that it manages\n * a stack of jsTPS_Transaction objects, each of which know how to do or undo\n * state changes for the given application. Note that this TPS is not platform\n * specific as it is programmed in raw JavaScript.\n */\nexport default class jsTPS {\n    constructor() {\n        // THE TRANSACTION STACK\n        this.transactions = [];\n\n        // THE TOTAL NUMBER OF TRANSACTIONS ON THE STACK,\n        // INCLUDING THOSE THAT MAY HAVE ALREADY BEEN UNDONE\n        this.numTransactions = 0;\n\n        // THE INDEX OF THE MOST RECENT TRANSACTION, NOTE THAT\n        // THIS MAY BE IN THE MIDDLE OF THE TRANSACTION STACK\n        // IF SOME TRANSACTIONS ON THE STACK HAVE BEEN UNDONE\n        // AND STILL COULD BE REDONE.\n        this.mostRecentTransaction = -1;\n\n        // THESE STATE VARIABLES ARE TURNED ON AND OFF WHILE\n        // TRANSACTIONS ARE DOING THEIR WORK SO AS TO HELP\n        // MANAGE CONCURRENT UPDATES\n        this.performingDo = false;\n        this.performingUndo = false;\n    }\n\n    /**\n     * isPerformingDo\n     * \n     * Accessor method for getting a boolean representing whether or not\n     * a transaction is currently in the midst of a do/redo operation.\n     */\n    isPerformingDo() {\n        return this.performingDo;\n    }\n\n    /**\n     * isPerformingUndo\n     * \n     * Accessor method for getting a boolean representing whether or not\n     * a transaction is currently in the midst of an undo operation.\n     */\n    isPerformingUndo() {\n        return this.performingUndo;\n    }\n\n    /**\n     * getSize\n     * \n     * Accessor method for getting the number of transactions on the stack.\n     */\n    getSize() {\n        return this.transactions.length;\n    }\n\n    /**\n     * getRedoSize\n     * \n     * Method for getting the total number of transactions on the stack\n     * that can possibly be redone.\n     */\n    getRedoSize() {\n        return this.getSize() - this.mostRecentTransaction - 1;\n    }\n\n    /**\n     * getUndoSize\n     * \n     * Method for getting the total number of transactions on the stack\n     * that can possible be undone.\n     */\n    getUndoSize() {\n        return this.mostRecentTransaction + 1;\n    }\n\n    /**\n     * hasTransactionToRedo\n     * \n     * Method for getting a boolean representing whether or not\n     * there are transactions on the stack that can be redone.\n     */\n    hasTransactionToRedo() {\n        return (this.mostRecentTransaction+1) < this.numTransactions;\n    }\n\n    /**\n     * hasTransactionToUndo\n     * \n     * Method for getting a boolean representing whehter or not\n     * there are transactions on the stack that can be undone.\n     */\n    hasTransactionToUndo() {\n        return this.mostRecentTransaction >= 0;\n    }\n\n    /**\n     * addTransaction\n     * \n     * Method for adding a transaction to the TPS stack, note it\n     * also then does the transaction.\n     * \n     * @param {jsTPS_Transaction} transaction Transaction to add to the stack and do.\n     */\n    addTransaction(transaction) {\n        // ARE WE BRANCHING?\n        if ((this.mostRecentTransaction < 0) \n            || (this.mostRecentTransaction < (this.transactions.length - 1))) {\n                for (let i = this.transactions.length - 1; i > this.mostRecentTransaction; i--) {\n                    this.transactions.splice(i, 1);\n                }\n                this.numTransactions = this.mostRecentTransaction + 2;\n        }\n        else {\n            this.numTransactions++;\n        }\n\n        // ADD THE TRANSACTION\n        this.transactions[this.mostRecentTransaction+1] = transaction;\n\n        // AND EXECUTE IT\n        this.doTransaction();\n    }\n\n    /**\n     * doTransaction\n     * \n     * Does the current transaction on the stack and advances the transaction\n     * counter. Note this function may be invoked as a result of either adding\n     * a transaction (which also does it), or redoing a transaction.\n     */\n    doTransaction() {\n        if (this.hasTransactionToRedo()) {\n            this.performingDo = true;\n            let transaction = this.transactions[this.mostRecentTransaction+1];\n            transaction.doTransaction();\n            this.mostRecentTransaction++;\n            this.performingDo = false;\n        }\n    }\n\n    /**\n     * This function gets the most recently executed transaction on the \n     * TPS stack and undoes it, moving the TPS counter accordingly.\n     */\n    undoTransaction() {\n        if (this.hasTransactionToUndo()) {\n            this.performingUndo = true;\n            let transaction = this.transactions[this.mostRecentTransaction];\n            transaction.undoTransaction();\n            this.mostRecentTransaction--;\n            this.performingUndo = false;\n        }\n    }\n\n    /**\n     * clearAllTransactions\n     * \n     * Removes all the transactions from the TPS, leaving it with none.\n     */\n    clearAllTransactions() {\n        // REMOVE ALL THE TRANSACTIONS\n        this.transactions = new Array();\n        \n        // MAKE SURE TO RESET THE LOCATION OF THE\n        // TOP OF THE TPS STACK TOO\n        this.mostRecentTransaction = -1;      \n        this.numTransactions = 0; \n    }\n\n    /**\n     * toString\n     * \n     * Builds and returns a textual represention of the full TPS and its stack.\n     */\n    toString() {        \n        let text = \"--Number of Transactions: \" + this.numTransactions + \"\\n\";\n        text += \"--Current Index on Stack: \" + this.mostRecentTransaction + \"\\n\";\n        text += \"--Current Transaction Stack:\\n\";\n        for (let i = 0; i <= this.mostRecentTransaction; i++) {\n            let jT = this.transactions[i];\n            text += \"----\" + jT.toString() + \"\\n\";\n        }\n        return text;        \n    }\n}","// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\nimport React, { Component } from 'react'\n\nclass Navbar extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div id=\"navbar\">\n                <div id=\"title-div\">\n                    Todo Tracker\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Navbar;","// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\nimport React, { Component } from 'react'\n\nclass ListLink extends Component {\n    constructor(props) {\n        super(props);\n        \n        // DISPLAY WHERE WE ARE\n        console.log(\"\\t\\t\\tListLink \" + this.props.toDoList.key + \" constructor\");\n    }\n\n    componentDidMount = () => {\n        // DISPLAY WHERE WE ARE\n        console.log(\"\\t\\t\\tListLink \" + this.props.toDoList.key + \" did mount\");\n    }\n\n    handleLoadList = (e) => {\n        this.props.loadToDoListCallback(this.props.toDoList);\n    }\n\n    handleOnBlur = (e) => {\n        let name = e.currentTarget.innerText;\n        console.log(name);\n        this.props.changeListNameCallback(this.props.toDoList.id, name);\n    }\n\n    render() {\n        // DISPLAY WHERE WE ARE\n        console.log(\"\\t\\t\\tListLink render\");\n\n        return (\n            <div \n                onBlur={this.handleOnBlur}\n                contentEditable\n                className='todo-list-button overflow-scroll'\n                onClick={this.handleLoadList}\n                style={this.props.toDoList.highlighted ? {backgroundColor: '#ffc819', color: '#000000'} : {backgroundColor: '#353a44', color: '#e9edf0'}}\n            >\n                {this.props.toDoList.name}\n            </div>\n        )\n    }\n}\n\nexport default ListLink;","// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\nimport React, { Component } from 'react';\nimport ListLink from './ListLink'\nimport AddBox from '@material-ui/icons/AddBox';\n\nclass LeftSidebar extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleAddNewList = () => {\n        this.props.addNewListCallback();\n    }\n\n    render() {\n        return (\n            <div id=\"left-sidebar\">\n                <div id=\"left-sidebar-header\" class=\"section-header\">\n                    <span class=\"left-sidebar-header-text\">Todolists</span>\n                    <span class=\"left-sidebar-controls\" id=\"add-undo-redo-box\">\n                        <AddBox \n                            id=\"add-list-button\"\n                            className=\"material-icons todo_button\"\n                            onClick={this.handleAddNewList} />\n                    </span>\n                </div>\n                <div id=\"todo-lists-list\" className='overflow-scroll'>\n                {\n                    this.props.toDoLists.map((toDoList) => (\n                        <ListLink\n                            key={toDoList.id}\n                            toDoList={toDoList}                                // PASS THE LIST TO THE CHILDREN\n                            loadToDoListCallback={this.props.loadToDoListCallback}   // PASS THE CALLBACK TO THE CHILDREN\n                            changeListNameCallback={this.props.changeListNameCallback}\n                        />\n                    ))\n                }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default LeftSidebar;","import React, { Component } from 'react'\n\nexport default class TaskName extends Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            oldName: ''\n        }\n    }\n\n    handleOnBlur = (e) => {\n        let id = e.currentTarget.parentElement.id.slice(15);\n        let newName = e.currentTarget.innerText;\n        if(newName !== this.state.oldName) {\n            this.props.editDescriptionCallback(id, newName, this.state.oldName);\n        }\n    }\n\n    handleOnFocus = (e) => {\n        let oldName = e.currentTarget.innerHTML;\n        this.setState({\n            oldName: oldName\n        })\n    }\n\n    render() {\n        return (\n            <div className='item-col task-col overflow-scroll' contentEditable onBlur={this.handleOnBlur} onFocus={this.handleOnFocus}>{this.props.item.description}</div>\n        )\n    }\n}","import React, { Component } from 'react'\n\nexport default class DueDate extends Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            oldDate: ''\n        }\n    }\n\n    handleChangeDate = (e) => {\n        let id = e.currentTarget.parentElement.parentElement.id.slice(15);\n        this.props.changeDateCallback(id, this.state.oldDate, e.currentTarget.value);\n    }\n\n    handleOnFocus = (e) => {\n        let currentDate = e.currentTarget.value;\n\n        this.setState({\n            oldDate:currentDate\n        })\n\n    }\n\n    render() {\n        return (\n            <div className='item-col due-date-col'>\n                <input class='due-date-field' type='date' onChange={this.handleChangeDate} onClick={this.handleOnFocus} value={this.props.item.due_date}></input>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\n\nexport default class Status extends Component {\n    \n    constructor(props) {\n        super(props);\n    }\n\n    handleSelectOnChange = (e) => {\n        let id = e.currentTarget.parentElement.parentElement.id.slice(15);\n        this.props.changeStatusCallback(id);\n    }\n\n    render() {\n        let listItem = this.props.item;\n        let statusType = \"status-complete\";\n        let statusBool = true;\n        if (listItem.status === \"incomplete\") {\n            statusBool = false;\n            statusType = \"status-incomplete\";\n        }\n\n        return (\n            <div className='item-col status-col' className={statusType}>\n                <select className='status-select' style={statusBool ? {color: 'dodgerblue'} : {color: 'gold'}} onChange={this.handleSelectOnChange}>\n                    <option style={{color:'#111111'}} selected={!statusBool}>incomplete</option>\n                    <option style={{color:'#111111'}} selected={statusBool}>complete</option>\n                </select>\n            </div>\n        )\n    }\n}","// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\nimport React, { Component } from 'react'\nimport KeyboardArrowUp from '@material-ui/icons/KeyboardArrowUp';\nimport KeyboardArrowDown from '@material-ui/icons/KeyboardArrowDown';\nimport Close from '@material-ui/icons/Close';\nimport TaskName from './TaskName';\nimport DueDate from './DueDate';\nimport Status from './Status';\n\nclass ToDoItem extends Component {\n    constructor(props) {\n        super(props);\n        \n        // DISPLAY WHERE WE ARE\n        console.log(\"\\t\\t\\tToDoItem \" + this.props.toDoListItem.id + \" constructor\");\n    }\n\n    componentDidMount = () => {\n        // DISPLAY WHERE WE ARE\n        console.log(\"\\t\\t\\tToDoItem \" + this.props.toDoListItem.id + \" did mount\");\n    }\n\n    handleDeleteItem = (e) => {\n        let id = e.currentTarget.parentElement.parentElement.id;\n        this.props.deleteItemCallback(id.slice(15));\n    }\n\n    handleMoveItemUp = (e) => {\n        let id = e.currentTarget.parentElement.parentElement.id.slice(15);\n        this.props.swapItemCallback(id, true);\n    }\n\n    handleMoveItemDown = (e) => {\n        let id = e.currentTarget.parentElement.parentElement.id.slice(15);\n        this.props.swapItemCallback(id, false);\n    }\n\n    render() {\n        // DISPLAY WHERE WE ARE\n        console.log(\"\\t\\t\\tToDoItem render\");\n        let listItem = this.props.toDoListItem;\n\n        return (\n            <div id={'todo-list-item-' + listItem.id} className='list-item-card'>\n                <TaskName item={listItem} editDescriptionCallback={this.props.editDescriptionCallback}/>\n                <DueDate item={listItem} changeDateCallback={this.props.changeDateCallback}/>\n                <Status item={listItem} changeStatusCallback={this.props.changeStatusCallback}/>\n                <div className='item-col test-4-col'></div>\n                <div className='item-col list-controls-col'>\n                    <KeyboardArrowUp className={this.props.index === 0 ? 'list-item-control todo-button disabled-button' : 'list-item-control todo-button'}\n                        onClick={this.handleMoveItemUp}\n                    />\n                    <KeyboardArrowDown className={this.props.index === this.props.lastIndex ? 'list-item-control todo-button disabled-button' : 'list-item-control todo-button'}\n                        onClick={this.handleMoveItemDown}\n                    />\n                    <Close className='list-item-control todo-button' \n                        onClick={this.handleDeleteItem}\n                    />\n                    <div className='list-item-control'></div>\n        <div className='list-item-control'></div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ToDoItem;","// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\nimport React, { Component } from 'react'\nimport ToDoItem from './ToDoItem'\nimport Undo from '@material-ui/icons/Undo';\nimport Redo from '@material-ui/icons/Redo';\nimport AddBox from '@material-ui/icons/AddBox';\nimport Delete from '@material-ui/icons/Delete';\nimport Close from '@material-ui/icons/Close';\n\nclass Workspace extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    /*componentWillMount() {\n        document.addEventListener(\"keydown\", this.onKeyPressed);\n    }\n  \n    componentWillUnmount() {\n        document.removeEventListener(\"keydown\", this.onKeyPressed);\n    }\n\n    onKeyPressed = (e) => {\n        if(e.key === 'z' && e.ctrlKey) {\n            this.props.undoTransactionCallback();\n        }\n        else if(e.key === 'y' && e.ctrlKey) {\n            this.props.redoTransactionCallback();\n        }\n    }\n    */\n\n    handleAddNewItem = () => {\n        this.props.addNewItemCallback();\n    }\n\n    handleUndoTransaction = () => {\n        this.props.undoTransactionCallback();\n    }\n\n    handleRedoTransaction = () => {\n        this.props.redoTransactionCallback();\n    }\n\n    handleOpenModal = () => {\n        this.props.openModal();\n    }\n\n    render() {\n        console.log(\"rendering workspace\\n\" + \"can undo?: \" + this.props.canUndo + \"\\n\" + \"can redo?: \" + this.props.canRedo);\n        return (\n            <div id=\"workspace\">\n                <div id=\"todo-list-header-card\" className=\"list-item-card\">\n                    <div id=\"task-col-header\" className=\"item-col todo-button\">Task</div>\n                    <div id=\"date-col-header\" className=\"item-col todo-button\">Due Date</div>\n                    <div id=\"status-col-header\" className=\"item-col todo-button\">Status</div>\n                    <div className=\"item-col\" display=\"flex\" flexDirection=\"row\" flexWrap=\"nowrap\">\n                        <Undo id=\"undo-button\"\n                            className={!(this.props.canUndo) ? \"list-item-control material-icons todo-button disabled-button\" : \"list-item-control material-icons todo-button\"}\n                            onClick={this.handleUndoTransaction}\n                        />\n                        <Redo id=\"redo-button\"\n                            className={!(this.props.canRedo) ? \"list-item-control material-icons todo-button disabled-button\" : \"list-item-control material-icons todo-button\"}\n                            onClick={this.handleRedoTransaction}\n                        />\n                        <AddBox id=\"add-item-button\" \n                            className={this.props.listOpen ? \"list-item-control material-icons todo-button disabled-button\" : \"list-item-control material-icons todo-button\"}\n                            onClick={this.handleAddNewItem}\n                        />\n                        <Delete id=\"delete-list-button\"\n                            className={this.props.listOpen ? \"list-item-control material-icons todo-button disabled-button\" : \"list-item-control material-icons todo-button\"}\n                            onClick={this.handleOpenModal}\n                        />\n                        <Close id=\"close-list-button\"\n                            className={this.props.listOpen ? \"list-item-control material-icons todo-button disabled-button\" : \"list-item-control material-icons todo-button\"}\n                            onClick={this.props.closeListCallback}\n                        />\n                    </div>\n                </div>\n                <div id=\"todo-list-items-div\" class='overflow-scroll'>\n                    {\n                        this.props.toDoListItems.map((toDoListItem, index) => (\n                        <ToDoItem\n                            key={toDoListItem.id}\n                            index={index}\n                            lastIndex={this.props.toDoListItems.length - 1}\n                            toDoListItem={toDoListItem}     // PASS THE ITEM TO THE CHILDREN\n                            deleteItemCallback={this.props.deleteItemCallback}\n                            swapItemCallback={this.props.swapItemCallback}\n                            changeStatusCallback={this.props.changeStatusCallback}\n                            changeDateCallback={this.props.changeDateCallback}\n                            editDescriptionCallback={this.props.editDescriptionCallback}\n                        />))\n                    }\n                </div>\n                <br />\n            </div>\n        );\n    }\n}\n\nexport default Workspace;","'use strict'\n\nimport { jsTPS_Transaction } from \"./jsTPS\";\n\nexport default class addItem_Transaction extends jsTPS_Transaction {\n\n    constructor(initApp) {\n        super();\n        this.app = initApp;\n    }\n\n    doTransaction() {\n        this.id = this.app.addNewItem();\n    }\n\n    undoTransaction() {\n        this.app.deleteItem(this.id);\n        this.app.state.nextListItemId--;\n    }\n\n}","'use strict'\n\nimport { jsTPS_Transaction } from \"./jsTPS\";\n\nexport default class deleteItem_Transaction extends jsTPS_Transaction {\n\n    constructor(initApp, id) {\n        super();\n        this.app = initApp;\n        this.id  = id;\n    }\n\n    doTransaction() {\n        this.index = this.app.indexOfId(this.id);\n        this.deletedItem = this.app.deleteItem(this.id);\n        console.log(\"doing transaction\");\n    }\n\n    undoTransaction() {\n        this.app.insertItem(this.deletedItem, this.index);\n    }\n\n}","'use strict'\n\nimport { jsTPS_Transaction } from \"./jsTPS\";\n\nexport default class swapItem_Transaction extends jsTPS_Transaction {\n\n    constructor(initApp, index, newIndex) {\n        super();\n        this.app = initApp;\n        this.index = index;\n        this.newIndex = newIndex;\n    }\n\n    doTransaction() {\n        this.app.swapItems(this.index, this.newIndex);\n    }\n\n    undoTransaction() {\n        this.app.swapItems(this.index, this.newIndex);\n    }\n\n}","'use strict'\n\nimport { jsTPS_Transaction } from \"./jsTPS\";\n\nexport default class changeStatus_Transaction extends jsTPS_Transaction {\n\n    constructor(initApp, id) {\n        super();\n        this.app = initApp;\n        this.id = id;\n    }\n\n    doTransaction() {\n        this.app.changeStatus(this.id);\n    }\n\n    undoTransaction() {\n        this.app.changeStatus(this.id);\n    }\n\n}","'use strict'\n\nimport { jsTPS_Transaction } from \"./jsTPS\";\n\nexport default class changeDate_Transaction extends jsTPS_Transaction {\n\n    constructor(initApp, id, oldDate, newDate) {\n        super();\n        this.app = initApp;\n        this.id = id;\n        this.oldDate = oldDate;\n        this.newDate = newDate;\n    }\n\n    doTransaction() {\n        this.app.changeDueDate(this.id, this.newDate);\n    }\n\n    undoTransaction() {\n        console.log(this.oldDate);\n        this.app.changeDueDate(this.id, this.oldDate);\n    }\n\n}","'use strict'\n\nimport { jsTPS_Transaction } from \"./jsTPS\";\n\nexport default class editDescription_Transaction extends jsTPS_Transaction {\n\n    constructor(initApp, id, newName, oldName) {\n        super();\n        this.app = initApp;\n        this.id  = id;\n        this.newName = newName;\n        this.oldName = oldName;\n    }\n\n    doTransaction() {\n        this.app.editDescription(this.id, this.newName);\n    }\n\n    undoTransaction() {\n        this.app.editDescription(this.id, this.oldName);\n    }\n\n}","import React, {Component} from 'react'\n\nexport default class DeleteModal extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return(\n            <div id='delete-modal' style={this.props.visible ? {display: 'block'} : {display: 'none'}}>\n                <div id='delete-modal-contents'>\n                    <div id='delete-prompt'>Delete List?</div>\n                    <div className='modal-button' id='close-modal' onClick={this.props.closeModal}>X</div>\n                    <div id='line'>------------------------------------</div>\n                    <div className='modal-button' id='confirm' onClick={this.props.deleteListCallback}>Confirm</div>\n                    <div className='modal-button' id='cancel' onClick={this.props.closeModal}>Cancel</div>\n                </div>\n            </div>\n        )\n    }\n\n}","// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\nimport React, { Component } from 'react';\nimport testData from './test/testData.json'\nimport jsTPS from './common/jsTPS' // WE NEED THIS TOO\n\n// THESE ARE OUR REACT COMPONENTS\nimport Navbar from './components/Navbar'\nimport LeftSidebar from './components/LeftSidebar'\nimport Workspace from './components/Workspace'\nimport addItem_Transaction from './common/addItem_Transaction'\nimport deleteItem_Transaction from './common/deleteItem_Transaction'\nimport swapItem_Transaction from './common/swapItem_Transaction'\nimport changeStatus_Transaction from './common/changeStatus_Transaction'\nimport changeDate_Transaction from './common/changeDate_Transaction'\nimport editDescription_Transaction from './common/editDescription_Transaction'\nimport DeleteModal from './components/DeleteModal'\n{/*import ItemsListHeaderComponent from './components/ItemsListHeaderComponent'\nimport ItemsListComponent from './components/ItemsListComponent'\nimport ListsComponent from './components/ListsComponent'\n*/}\nclass App extends Component {\n  constructor(props) {\n    // ALWAYS DO THIS FIRST\n    super(props);\n\n    // DISPLAY WHERE WE ARE\n    console.log(\"App constructor\");\n\n    // MAKE OUR TRANSACTION PROCESSING SYSTEM\n    this.tps = new jsTPS();\n\n    // CHECK TO SEE IF THERE IS DATA IN LOCAL STORAGE FOR THIS APP\n    let recentLists = localStorage.getItem(\"recentLists\");\n\n    if (!recentLists) {\n      recentLists = JSON.stringify(testData.toDoLists);\n      localStorage.setItem(\"toDoLists\", recentLists);\n    }\n    recentLists = JSON.parse(recentLists);\n\n    // FIND OUT WHAT THE HIGHEST ID NUMBERS ARE FOR LISTS\n    let highListId = -1;\n    let highListItemId = -1;\n    for (let i = 0; i < recentLists.length; i++) {\n      let toDoList = recentLists[i];\n      toDoList.highlighted = false;\n      if (toDoList.id > highListId) {\n        highListId = toDoList.id;\n      }\n      for (let j = 0; j < toDoList.items.length; j++) {\n        let toDoListItem = toDoList.items[j];\n        if (toDoListItem.id > highListItemId)\n        highListItemId = toDoListItem.id;\n      }\n    };\n\n    // SETUP OUR APP STATE\n    this.state = {\n      toDoLists: recentLists,\n      currentList: {items: []},\n      nextListId: highListId+1,\n      nextListItemId: highListItemId+1,\n      useVerboseFeedback: true,\n      modalVisible: false\n    }\n  }\n\n  // WILL LOAD THE SELECTED LIST\n  loadToDoList = (toDoList) => {\n    if(toDoList.id !== this.state.currentList.id) {\n      this.tps.clearAllTransactions();\n    }\n\n    console.log(\"loading list id \" + toDoList.id);\n\n    // MAKE SURE toDoList IS AT THE TOP OF THE STACK BY REMOVING THEN PREPENDING\n    const nextLists = this.state.toDoLists.filter(testList =>\n      testList.id !== toDoList.id\n    );\n    nextLists.unshift(toDoList);\n\n    nextLists[0].highlighted = true;\n    for(let i = 1; i < nextLists.length; i++) {\n      nextLists[i].highlighted = false;\n    }\n\n    this.setState({\n      toDoLists: nextLists,\n      currentList: toDoList\n    });\n  }\n\n  addNewList = () => {\n    let newToDoListInList = [this.makeNewToDoList()];\n    let newToDoListsList = [...newToDoListInList, ...this.state.toDoLists];\n    let newToDoList = newToDoListInList[0];\n\n    newToDoListsList[0].highlighted = true;\n    for(let i = 1; i < newToDoListsList.length; i++) {\n      newToDoListsList[i].highlighted = false;\n    }\n\n    console.log(newToDoList);\n    console.log(\"added list id \" + newToDoList.id);\n    // AND SET THE STATE, WHICH SHOULD FORCE A render\n    this.setState({\n      toDoLists: newToDoListsList,\n      currentList: newToDoList,\n      nextListId: this.state.nextListId+1\n    }, this.afterToDoListsChangeComplete);\n  }\n\n  makeNewToDoList = () => {\n    let newToDoList = {\n      id: this.state.nextListId,\n      name: 'Untitled',\n      items: []\n    };\n    return newToDoList;\n  }\n\n  makeNewToDoListItem = () =>  {\n    let newToDoListItem = {\n      description: \"No Description\",\n      due_date: \"none\",\n      status: \"incomplete\"\n    };\n    return newToDoListItem;\n  }\n\n  addNewItemTransaction = () => {\n    let newTransaction = new addItem_Transaction(this);\n    this.tps.addTransaction(newTransaction);\n  }\n\n  addNewItem = () => {\n    let newItem = this.makeNewToDoListItem();\n    let newId = this.state.nextListItemId+1;\n    newItem.id = newId;\n\n    let newCurrentList = this.state.currentList;\n    newCurrentList.items[newCurrentList.items.length] = newItem;\n    let newListOfLists = this.state.toDoLists.map((toDoList) => toDoList.id === this.state.currentList.id ? newCurrentList : toDoList)\n\n    this.setState({\n      toDoLists: newListOfLists,\n      currentList: newCurrentList,\n      nextListItemId: this.state.nextListItemId + 1\n    }, this.afterToDoListsChangeComplete)\n\n    return newId;\n  }\n\n  deleteItemTransaction = (id) => {\n    let newTransaction = new deleteItem_Transaction(this, id);\n    this.tps.addTransaction(newTransaction);\n  }\n\n  deleteItem = (id) => {\n    let index = this.indexOfId(id);\n    let removedItem = this.state.currentList.items[index];\n    let newCurrentListItems = this.state.currentList.items.filter(item => item.id != id);\n    let newCurrentList = this.state.currentList;\n    newCurrentList.items = newCurrentListItems;\n    let newListOfLists = this.state.toDoLists.map((toDoList) => toDoList.id === this.state.currentList.id ? newCurrentList : toDoList)\n\n    this.setState({\n      currentList: newCurrentList,\n      toDoLists: newListOfLists\n    }, this.afterToDoListsChangeComplete)\n\n    return removedItem;\n  }\n\n  swapItemTransaction = (id, up) => {\n    console.log(id);\n    let index = this.indexOfId(id);\n    let newIndex = index;\n    if(up) {\n      newIndex--;\n    }\n    else {\n      newIndex++;\n    }\n\n    if(newIndex < 0 || newIndex > this.state.currentList.items.length - 1) {\n      return;\n    }\n    else {\n      let newTransaction = new swapItem_Transaction(this, index, newIndex);\n      this.tps.addTransaction(newTransaction);\n    }\n  }\n\n  swapItems = (indexOne, indexTwo) => {\n    let newCurrentList = this.state.currentList;\n    let newCurrentItems = this.state.currentList.items;\n    let temp = newCurrentItems[indexOne];\n    newCurrentItems[indexOne] = newCurrentItems[indexTwo];\n    newCurrentItems[indexTwo] = temp;\n    newCurrentList.items = newCurrentItems;\n\n    let newListOfLists = this.state.toDoLists.map((toDoList) => toDoList.id === this.state.currentList.id ? newCurrentList : toDoList)\n\n    this.setState({\n      currentList: newCurrentList,\n      toDoLists: newListOfLists\n    }, this.afterToDoListsChangeComplete)\n  }\n\n  changeStatusTransaction = (id) => {\n    let newTransaction = new changeStatus_Transaction(this, id);\n    this.tps.addTransaction(newTransaction);\n  }\n\n  changeStatus = (id) => {\n    let newCurrentList = this.state.currentList;\n    let index = this.indexOfId(id);\n    if(newCurrentList.items[index].status === 'complete') {\n      newCurrentList.items[index].status = 'incomplete';\n    }\n    else {\n      newCurrentList.items[index].status = 'complete';\n    }\n\n    let newListOfLists = this.state.toDoLists.map((toDoList) => toDoList.id === this.state.currentList.id ? newCurrentList : toDoList)\n\n    this.setState({\n      currentList: newCurrentList,\n      toDoLists: newListOfLists\n    }, this.afterToDoListsChangeComplete)\n\n  }\n\n  changeDateTransaction = (id, oldDate, newDate) => {\n    let newTransaction = new changeDate_Transaction(this, id, oldDate, newDate);\n    this.tps.addTransaction(newTransaction);\n  }\n\n  changeDueDate = (id, date) => {\n    let newCurrentList = this.state.currentList;\n    let index = this.indexOfId(id);\n    newCurrentList.items[index].due_date = date;\n\n    let newListOfLists = this.state.toDoLists.map((toDoList) => toDoList.id === this.state.currentList.id ? newCurrentList : toDoList)\n\n    this.setState({\n      currentList: newCurrentList,\n      toDoLists: newListOfLists\n    }, this.afterToDoListsChangeComplete)\n\n  }\n\n  editDescriptionTransaction = (id, newName, oldName) => {\n    let newTransaction = new editDescription_Transaction(this, id, newName, oldName);\n    this.tps.addTransaction(newTransaction);\n  }\n\n  editDescription = (id, name) => {\n    let newCurrentList = this.state.currentList;\n    let index = this.indexOfId(id);\n    newCurrentList.items[index].description = name;\n\n    let newListOfLists = this.state.toDoLists.map((toDoList) => toDoList.id === this.state.currentList.id ? newCurrentList : toDoList)\n\n    this.setState({\n      currentList: newCurrentList,\n      toDoLists: newListOfLists\n    }, this.afterToDoListsChangeComplete)\n  }\n\n  insertItem = (item, index) => {\n    let newCurrentListItems = this.state.currentList.items;\n    for(let i = newCurrentListItems.length; i > index; i--) {\n      newCurrentListItems[i] = newCurrentListItems[i-1];\n    }\n    newCurrentListItems[index] = item;\n    let newCurrentList = this.state.currentList;\n    newCurrentList.items = newCurrentListItems;\n    let newListOfLists = this.state.toDoLists.map((toDoList) => toDoList.id === this.state.currentList.id ? newCurrentList : toDoList)\n\n    this.setState({\n      currentList: newCurrentList,\n      toDoLists: newListOfLists\n    }, this.afterToDoListsChangeComplete)\n\n  }\n\n  openModal = () => {\n    this.setState({\n      modalVisible: true\n    })\n  }\n\n  closeModal = () => {\n    this.setState({\n      modalVisible: false\n    })\n  }\n\n  deleteList = () => {\n    let newListOfLists = this.state.toDoLists;\n    console.log(newListOfLists);\n    for(let i = 0; i < newListOfLists.length; i++) {\n      console.log(newListOfLists[i]);\n      newListOfLists[i] = newListOfLists[i + 1];\n    }\n    newListOfLists.length = newListOfLists.length - 1;\n    console.log(newListOfLists);\n\n    this.setState({\n      toDoLists: newListOfLists,\n      currentList: { items: [] },\n      modalVisible: false\n    }, this.afterToDoListsChangeComplete)\n\n  }\n\n  closeList = () => {\n    let listOfLists = this.state.toDoLists;\n    for(let i = 0; i < listOfLists.length; i++) {\n      listOfLists[i].highlighted = false;\n    }\n\n    this.setState({\n      toDoLists: listOfLists,\n      currentList: { items: [] }\n    }, this.afterToDoListsChangeComplete)\n\n  }\n\n  changeListName = (id, name) => {\n    let newListsList = this.state.toDoLists;\n    for(let i = 0; i < newListsList.length; i++) {\n      if(newListsList[i].id === id) {\n        console.log(\"list at index \" + i + \" :\" + newListsList[i].name);\n        newListsList[i].name = name;\n        console.log(\"list at index \" + i + \" after change:\" + newListsList[i].name);\n      }\n    }\n\n    this.setState({\n      toDoLists: newListsList\n    }, this.afterToDoListsChangeComplete)\n  }\n\n  indexOfId = (id) => {\n    let todoItems = this.state.currentList.items;\n    for(let i = 0; i < todoItems.length; i++) {\n      if(todoItems[i].id == id) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  undoTransaction = () => {\n    this.tps.undoTransaction();\n  }\n\n  redoTransaction = () => {\n    this.tps.doTransaction();\n  }\n\n  // THIS IS A CALLBACK FUNCTION FOR AFTER AN EDIT TO A LIST\n  afterToDoListsChangeComplete = () => {\n    console.log(\"App updated currentToDoList: \" + this.state.currentList);\n\n    // WILL THIS WORK? @todo\n    let toDoListsString = JSON.stringify(this.state.toDoLists);\n    localStorage.setItem(\"recentLists\", toDoListsString);\n  }\n\n  handleKeyPress = (e) => {\n    if(e.ctrlKey && e.key === 'z') {\n      this.undoTransaction();\n    }\n    else if(e.ctrlKey && e.key == 'y') {\n      this.redoTransaction();\n    }\n  }\n\n  render() {\n    let items = this.state.currentList.items;\n    return (\n      <div onKeyDown={this.handleKeyPress} tabIndex={0} id=\"root\">\n        <DeleteModal \n          visible={this.state.modalVisible}\n          closeModal={this.closeModal}\n          deleteListCallback={this.deleteList}\n        />\n        <Navbar />\n        <LeftSidebar \n          toDoLists={this.state.toDoLists}\n          loadToDoListCallback={this.loadToDoList}\n          addNewListCallback={this.addNewList}\n          changeListNameCallback={this.changeListName}\n        />\n        <Workspace \n          toDoListItems={items}\n          addNewItemCallback={this.addNewItemTransaction}\n          deleteItemCallback={this.deleteItemTransaction}\n          swapItemCallback={this.swapItemTransaction}\n          changeStatusCallback={this.changeStatusTransaction}\n          changeDateCallback={this.changeDateTransaction}\n          editDescriptionCallback={this.editDescriptionTransaction}\n          undoTransactionCallback={this.undoTransaction}\n          redoTransactionCallback={this.redoTransaction}\n          openModal={this.openModal}\n          closeListCallback={this.closeList}\n          canUndo={this.tps.hasTransactionToUndo()}\n          canRedo={this.tps.hasTransactionToRedo()}\n          listOpen={this.state.currentList.id === undefined}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/todo_layout.css'\nimport './css/todo_style.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}